"arg:" 
[[histogram]] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
CUDA device [GeForce GTX 980] has 16 Multi-Processors, Compute 5.2
Initializing data...
...allocating CPU memory.
...generating input data
...allocating GPU memory and copying input data

Initializing 256-bin histogram...
Running 256-bin GPU histogram for 67108864 bytes (100 runs)...

Adjust Iters to 2683 for meeting time requirement 10 secs.
iterated 2683, average time is 3.808923 msec.
histogram256() time (total) : 10.21934 sec, 17618.8538 MB/sec

histogram256, Throughput = 17618.8538 MB/s, Time = 0.00381 s, Size = 67108864 Bytes, NumDevsUsed = 1, Workgroup = 192

Validating GPU results...
 ...reading back GPU results
 ...histogram256CPU()
 ...comparing the results
 ...256-bin histograms match

Shutting down 256-bin histogram...


Shutting down...
[histogram] - Test Summary
Test passed
[[histogram]] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
CUDA device [GeForce GTX 980] has 16 Multi-Processors, Compute 5.2
Initializing data...
...allocating CPU memory.
...generating input data
...allocating GPU memory and copying input data

Initializing 256-bin histogram...
Running 256-bin GPU histogram for 67108864 bytes (50 runs)...

iterated 50, average time is 3.826713 msec.
histogram256() time (total) : 0.19134 sec, 17536.9474 MB/sec

histogram256, Throughput = 17536.9474 MB/s, Time = 0.00383 s, Size = 67108864 Bytes, NumDevsUsed = 1, Workgroup = 192

Validating GPU results...
 ...reading back GPU results
 ...histogram256CPU()
 ...comparing the results
 ...256-bin histograms match

Shutting down 256-bin histogram...


Shutting down...
[histogram] - Test Summary
Test passed
==12852== NVPROF is profiling process 12852, command: applications/histogram -device=1 -iters=50
==12852== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==12852== Profiling application: applications/histogram -device=1 -iters=50
==12852== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 86.38%  189.87ms        51  3.7229ms  3.7144ms  3.7332ms  histogram256Kernel(unsigned int*, unsigned int*, unsigned int)
 13.29%  29.206ms         1  29.206ms  29.206ms  29.206ms  [CUDA memcpy HtoD]
  0.33%  726.00us        51  14.235us  13.952us  15.263us  mergeHistogram256Kernel(unsigned int*, unsigned int*, unsigned int)
  0.00%  5.1840us         1  5.1840us  5.1840us  5.1840us  [CUDA memcpy DtoH]

==12852== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 41.16%  204.98ms         3  68.328ms  584.45us  202.99ms  cudaMalloc
 39.21%  195.27ms        53  3.6844ms  7.3910us  3.8512ms  cudaDeviceSynchronize
 11.87%  59.099ms         1  59.099ms  59.099ms  59.099ms  cudaDeviceReset
  5.68%  28.310ms         2  14.155ms  115.70us  28.194ms  cudaMemcpy
  0.70%  3.4618ms        51  67.877us  46.619us  152.94us  cudaEventSynchronize
  0.33%  1.6433ms       102  16.111us  13.929us  55.431us  cudaLaunch
  0.26%  1.2852ms         2  642.58us  630.21us  654.95us  cudaGetDeviceProperties
  0.24%  1.2201ms         3  406.69us  185.63us  834.32us  cudaFree
  0.22%  1.0771ms       182  5.9180us       0ns  304.45us  cuDeviceGetAttribute
  0.17%  824.08us       102  8.0790us  5.9690us  12.508us  cudaEventRecord
  0.10%  490.64us        51  9.6200us  7.9590us  15.066us  cudaEventElapsedTime
  0.03%  148.39us         2  74.193us  68.508us  79.878us  cuDeviceGetName
  0.01%  69.086us       306     225ns       0ns  1.7060us  cudaSetupArgument
  0.01%  44.631us       102     437ns       0ns  11.086us  cudaConfigureCall
  0.00%  23.305us       102     228ns       0ns     568ns  cudaGetLastError
  0.00%  16.203us         2  8.1010us  1.1370us  15.066us  cudaEventCreate
  0.00%  11.655us         1  11.655us  11.655us  11.655us  cudaSetDevice
  0.00%  11.086us         2  5.5430us  5.4010us  5.6850us  cuDeviceTotalMem
  0.00%  3.4130us         3  1.1370us     285ns  2.8430us  cuDeviceGetCount
  0.00%  1.4230us         6     237ns       0ns     285ns  cuDeviceGet
  0.00%     853ns         1     853ns     853ns     853ns  cudaGetDeviceCount
