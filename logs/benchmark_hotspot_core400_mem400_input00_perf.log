"arg:512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out" 
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
WG size of kernel = 16 X 16
pyramidHeight: 1
gridSize: [512, 512]
border:[1, 1]
blockGrid:[37, 37]
targetBlock:[14, 14]
Start computing the transient temperature
Adjust Iters to 28181 for meeting time requirement 10 secs.
iterated 28181, average time is 0.330656 msec.
Ending simulation
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
WG size of kernel = 16 X 16
pyramidHeight: 1
gridSize: [512, 512]
border:[1, 1]
blockGrid:[37, 37]
targetBlock:[14, 14]
Start computing the transient temperature
iterated 50, average time is 0.346726 msec.
Ending simulation
==43800== NVPROF is profiling process 43800, command: applications/hotspot 512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out -device=1 -iters=50
==43800== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==43800== Profiling application: applications/hotspot 512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out -device=1 -iters=50
==43800== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 93.86%  15.382ms        51  301.61us  288.79us  378.04us  calculate_temp(int, float*, float*, float*, int, int, int, int, float, float, float, float, float)
  4.20%  688.11us         2  344.06us  344.02us  344.09us  [CUDA memcpy HtoD]
  1.95%  318.81us         1  318.81us  318.81us  318.81us  [CUDA memcpy DtoH]

==43800== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 88.12%  188.15ms         3  62.718ms  542.66us  186.73ms  cudaMalloc
  8.53%  18.218ms        51  357.22us  337.14us  701.85us  cudaThreadSynchronize
  0.72%  1.5387ms        51  30.171us  29.563us  31.269us  cudaEventSynchronize
  0.57%  1.2235ms         3  407.82us  178.80us  853.36us  cudaMemcpy
  0.48%  1.0268ms       182  5.6410us       0ns  284.55us  cuDeviceGetAttribute
  0.40%  845.12us        51  16.570us  15.634us  49.746us  cudaLaunch
  0.38%  808.45us       102  7.9250us  5.6850us  10.518us  cudaEventRecord
  0.23%  493.20us         3  164.40us  125.08us  191.03us  cudaFree
  0.21%  444.88us        51  8.7230us  8.2430us  9.6650us  cudaEventElapsedTime
  0.21%  442.88us         1  442.88us  442.88us  442.88us  cudaGetDeviceProperties
  0.07%  144.98us         2  72.487us  67.655us  77.320us  cuDeviceGetName
  0.05%  108.88us       663     164ns       0ns     853ns  cudaSetupArgument
  0.01%  20.470us        51     401ns     284ns  2.2750us  cudaConfigureCall
  0.01%  14.498us         2  7.2490us  7.1070us  7.3910us  cudaDeviceSynchronize
  0.01%  14.213us         1  14.213us  14.213us  14.213us  cudaSetDevice
  0.01%  11.087us         2  5.5430us  5.4010us  5.6860us  cuDeviceTotalMem
  0.00%  6.2540us         2  3.1270us     853ns  5.4010us  cudaEventCreate
  0.00%  3.1280us         3  1.0420us     284ns  2.5590us  cuDeviceGetCount
  0.00%  1.9900us         1  1.9900us  1.9900us  1.9900us  cudaGetDeviceCount
  0.00%  1.7070us         6     284ns       0ns     569ns  cuDeviceGet
