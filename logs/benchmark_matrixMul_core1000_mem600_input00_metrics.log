[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 12.781977 msec
Performance= 168.01 GFlop/s, Time= 12.782 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==69556== NVPROF is profiling process 69556, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==69556== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==69556== Profiling result:
==69556== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                        achieved_occupancy                        Achieved Occupancy    0.993754    0.995916    0.994858
         52                             sm_efficiency                   Multiprocessor Activity      98.43%      99.22%      98.92%
         52                 warp_execution_efficiency                 Warp Execution Efficiency     100.00%     100.00%     100.00%
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 28.456246 msec
Performance= 75.47 GFlop/s, Time= 28.456 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==2728== NVPROF is profiling process 2728, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==2728== Some kernel(s) will be replayed on device 1 in order to collect all events/metrics.
==2728== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==2728== Profiling result:
==2728== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                  eligible_warps_per_cycle           Eligible Warps Per Active Cycle    1.439479    1.475533    1.457974
         52                    dram_read_transactions           Device Memory Read Transactions     4324411     4325492     4324925
         52                      dram_read_throughput             Device Memory Read Throughput  26.488GB/s  26.824GB/s  26.665GB/s
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 25.733812 msec
Performance= 83.45 GFlop/s, Time= 25.734 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==84548== NVPROF is profiling process 84548, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==84548== Some kernel(s) will be replayed on device 1 in order to collect all events/metrics.
==84548== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==84548== Profiling result:
==84548== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                   dram_write_transactions          Device Memory Write Transactions      153817      159578      159206
         52                     dram_write_throughput            Device Memory Write Throughput  969.03MB/s  0.9883GB/s  0.9807GB/s
         52                      l2_read_transactions                      L2 Read Transactions     8388679     8389156     8388803
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 30.430232 msec
Performance= 70.57 GFlop/s, Time= 30.430 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==86816== NVPROF is profiling process 86816, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==86816== Some kernel(s) will be replayed on device 1 in order to collect all events/metrics.
==86816== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==86816== Profiling result:
==86816== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                        l2_read_throughput                     L2 Throughput (Reads)  51.327GB/s  52.200GB/s  51.752GB/s
         52                     l2_write_transactions                     L2 Write Transactions      131078      131078      131078
         52                       l2_write_throughput                    L2 Throughput (Writes)  821.26MB/s  835.24MB/s  826.84MB/s
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 8.045231 msec
Performance= 266.93 GFlop/s, Time= 8.045 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==83952== NVPROF is profiling process 83952, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==83952== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==83952== Profiling result:
==83952== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                  shared_load_transactions                  Shared Load Transactions    50331648    50331648    50331648
         52                    shared_load_throughput             Shared Memory Load Throughput  1228.4GB/s  1257.6GB/s  1245.5GB/s
         52                 shared_store_transactions                 Shared Store Transactions     2097152     2097152     2097152
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 11.478771 msec
Performance= 187.08 GFlop/s, Time= 11.479 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==81780== NVPROF is profiling process 81780, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==81780== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==81780== Profiling result:
==81780== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                   shared_store_throughput            Shared Memory Store Throughput  51.331GB/s  52.628GB/s  51.858GB/s
         52                         branch_efficiency                         Branch Efficiency     100.00%     100.00%     100.00%
         52                               cf_executed        Executed Control-Flow Instructions     1114112     1114112     1114112
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 353.382344 msec
Performance= 6.08 GFlop/s, Time= 353.382 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==85296== NVPROF is profiling process 85296, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==85296== Some kernel(s) will be replayed on device 1 in order to collect all events/metrics.
==85296== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==85296== Profiling result:
==85296== Metric result:
Invocations                               Metric Name                            Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                                 cf_issued              Issued Control-Flow Instructions     1114112     1114112     1114112
         52                             flop_count_sp   Floating Point Operations(Single Precision)  2147483648  2147483648  2147483648
         52                        flop_sp_efficiency                  FLOP Efficiency(Peak Single)      10.89%      11.13%      11.01%
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 45.313337 msec
Performance= 47.39 GFlop/s, Time= 45.313 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==82808== NVPROF is profiling process 82808, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==82808== Some kernel(s) will be replayed on device 1 in order to collect all events/metrics.
==82808== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==82808== Profiling result:
==82808== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                            gld_throughput                    Global Load Throughput  51.393GB/s  52.021GB/s  51.735GB/s
         52                          gld_transactions                  Global Load Transactions    16777216    16777216    16777216
         52                            gst_throughput                   Global Store Throughput  822.30MB/s  832.34MB/s  826.84MB/s
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 11.832813 msec
Performance= 181.49 GFlop/s, Time= 11.833 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==2888== NVPROF is profiling process 2888, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==2888== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==2888== Profiling result:
==2888== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                          gst_transactions                 Global Store Transactions      131072      131072      131072
         52                               inst_issued                       Instructions Issued    97850931    97851438    97851188
         52                             inst_per_warp                     Instructions per warp  2.9860e+03  2.9860e+03  2.9860e+03
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 8.721523 msec
Performance= 246.23 GFlop/s, Time= 8.722 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==3608== NVPROF is profiling process 3608, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==3608== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==3608== Profiling result:
==3608== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                                       ipc                              Executed IPC    1.286130    1.317055    1.301185
