"arg:512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out" 
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
WG size of kernel = 16 X 16
pyramidHeight: 1
gridSize: [512, 512]
border:[1, 1]
blockGrid:[37, 37]
targetBlock:[14, 14]
Start computing the transient temperature
Adjust Iters to 51372 for meeting time requirement 10 secs.
iterated 51372, average time is 0.159702 msec.
Ending simulation
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
WG size of kernel = 16 X 16
pyramidHeight: 1
gridSize: [512, 512]
border:[1, 1]
blockGrid:[37, 37]
targetBlock:[14, 14]
Start computing the transient temperature
iterated 50, average time is 0.161376 msec.
Ending simulation
==21792== NVPROF is profiling process 21792, command: applications/hotspot 512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out -device=1 -iters=50
==21792== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==21792== Profiling application: applications/hotspot 512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out -device=1 -iters=50
==21792== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 85.81%  6.0634ms        51  118.89us  116.77us  123.71us  calculate_temp(int, float*, float*, float*, int, int, int, int, float, float, float, float, float)
  9.72%  686.70us         2  343.35us  343.35us  343.35us  [CUDA memcpy HtoD]
  4.47%  315.99us         1  315.99us  315.99us  315.99us  [CUDA memcpy DtoH]

==21792== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 92.12%  186.46ms         3  62.152ms  536.98us  185.04ms  cudaMalloc
  4.39%  8.8764ms        51  174.05us  161.46us  529.58us  cudaThreadSynchronize
  0.76%  1.5453ms        51  30.299us  26.721us  53.158us  cudaEventSynchronize
  0.55%  1.1191ms         3  373.05us  177.67us  747.90us  cudaMemcpy
  0.52%  1.0518ms       182  5.7790us       0ns  294.21us  cuDeviceGetAttribute
  0.40%  817.55us        51  16.030us  14.782us  42.071us  cudaLaunch
  0.36%  729.42us       102  7.1510us  5.1160us  10.233us  cudaEventRecord
  0.29%  594.68us         1  594.68us  594.68us  594.68us  cudaGetDeviceProperties
  0.23%  458.81us        51  8.9960us  7.9590us  15.350us  cudaEventElapsedTime
  0.21%  434.64us         3  144.88us  84.995us  175.68us  cudaFree
  0.07%  146.11us         2  73.056us  68.508us  77.604us  cuDeviceGetName
  0.05%  109.72us       663     165ns       0ns     852ns  cudaSetupArgument
  0.01%  19.048us        51     373ns     284ns  1.9900us  cudaConfigureCall
  0.01%  14.497us         2  7.2480us  7.1060us  7.3910us  cudaDeviceSynchronize
  0.01%  13.645us         1  13.645us  13.645us  13.645us  cudaSetDevice
  0.01%  11.086us         2  5.5430us  5.4010us  5.6850us  cuDeviceTotalMem
  0.00%  6.5380us         2  3.2690us  1.1370us  5.4010us  cudaEventCreate
  0.00%  3.1260us         3  1.0420us     284ns  2.5580us  cuDeviceGetCount
  0.00%  2.2740us         1  2.2740us  2.2740us  2.2740us  cudaGetDeviceCount
  0.00%  1.7070us         6     284ns       0ns     569ns  cuDeviceGet
