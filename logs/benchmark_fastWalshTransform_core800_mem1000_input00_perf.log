"arg:" 
applications\fastWalshTransform Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
...allocating CPU memory
...allocating GPU memory
...generating data
Data length: 8388608; kernel length: 128
Running GPU dyadic convolution using Fast Walsh Transform...
Adjust Iters to 368 for meeting time requirement 10 secs.
iterated 368, average time is 27.186118 msecs.
GPU total   time: 10004.491364 ms
GPU average time: 27.186118 ms; GOP/s: 10.645395
Reading back GPU results...
Running straightforward CPU dyadic convolution...
Comparing the results...
Shutting down...
L2 norm: 1.#QNAN0E+000
Test failed!
applications/fastWalshTransform Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
...allocating CPU memory
...allocating GPU memory
...generating data
Data length: 8388608; kernel length: 128
Running GPU dyadic convolution using Fast Walsh Transform...
iterated 50, average time is 27.192574 msecs.
GPU total   time: 1359.628702 ms
GPU average time: 27.192574 ms; GOP/s: 10.642868
Reading back GPU results...
Running straightforward CPU dyadic convolution...
Comparing the results...
Shutting down...
L2 norm: 1.#QNAN0E+000
Test failed!
==36240== NVPROF is profiling process 36240, command: applications/fastWalshTransform -device=1 -iters=50
==36240== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==36240== Profiling application: applications/fastWalshTransform -device=1 -iters=50
==36240== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 78.18%  1.09951s       918  1.1977ms  1.1887ms  1.2093ms  fwtBatch2Kernel(float*, float*, int)
 13.27%  186.65ms       153  1.2199ms  1.2133ms  1.2257ms  fwtBatch1Kernel(float*, float*, int)
  6.47%  91.027ms        51  1.7848ms  1.7805ms  1.7902ms  modulateKernel(float*, float*, int)
  1.08%  15.210ms         1  15.210ms  15.210ms  15.210ms  [CUDA memcpy DtoH]
  0.99%  13.984ms         2  6.9921ms  1.9520us  13.982ms  [CUDA memcpy HtoD]
  0.00%  1.1520us         1  1.1520us  1.1520us  1.1520us  [CUDA memset]

==36240== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 82.53%  1.38468s        51  27.151ms  27.124ms  27.275ms  cudaThreadSynchronize
 10.35%  173.65ms         2  86.826ms  6.5023ms  167.15ms  cudaMalloc
  3.80%  63.757ms         1  63.757ms  63.757ms  63.757ms  cudaDeviceReset
  1.79%  30.075ms         3  10.025ms  732.55us  15.646ms  cudaMemcpy
  0.97%  16.267ms      1122  14.498us  12.508us  62.538us  cudaLaunch
  0.18%  3.0729ms        51  60.252us  44.061us  156.63us  cudaEventSynchronize
  0.06%  1.0495ms       182  5.7660us       0ns  284.55us  cuDeviceGetAttribute
  0.06%  963.09us         2  481.54us  425.54us  537.54us  cudaFree
  0.05%  857.91us       102  8.4100us  5.1160us  27.290us  cudaEventRecord
  0.04%  750.74us         3  250.25us  6.8220us  736.53us  cudaDeviceSynchronize
  0.04%  749.87us      3366     222ns       0ns  11.370us  cudaSetupArgument
  0.04%  588.14us         1  588.14us  588.14us  588.14us  cudaGetDeviceProperties
  0.03%  438.91us        51  8.6060us  7.6750us  20.183us  cudaEventElapsedTime
  0.02%  329.18us      1122     293ns       0ns  11.655us  cudaConfigureCall
  0.02%  295.06us      1071     275ns       0ns     569ns  cudaGetLastError
  0.01%  159.19us         2  79.594us  68.508us  90.681us  cuDeviceGetName
  0.01%  94.376us         1  94.376us  94.376us  94.376us  cudaMemset
  0.00%  11.655us         2  5.8270us  1.1370us  10.518us  cudaEventCreate
  0.00%  11.087us         2  5.5430us  5.4010us  5.6860us  cuDeviceTotalMem
  0.00%  10.517us         1  10.517us  10.517us  10.517us  cudaSetDevice
  0.00%  3.4110us         3  1.1370us     284ns  2.8430us  cuDeviceGetCount
  0.00%  2.2740us         6     379ns       0ns     569ns  cuDeviceGet
  0.00%     852ns         1     852ns     852ns     852ns  cudaGetDeviceCount
