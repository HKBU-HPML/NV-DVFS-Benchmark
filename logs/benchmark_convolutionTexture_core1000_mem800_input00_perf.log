"arg:" 
[applications\convolutionTexture] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
Running GPU rows convolution (100 identical iterations)...
Adjust Iters to 9359 for meeting time requirement 10 secs.
iterated 9359, average time is 1.060614 msec.
Total   convolutionRowsGPU() time: 9926.290039 msecs
Average convolutionRowsGPU() time: 1.060614 msecs; //4448.923411 Mpix/s
Copying convolutionRowGPU() output back to the texture...
cudaMemcpyToArray() time: 0.975027 msecs; //4839.447104 Mpix/s
Running GPU columns convolution (1 iterations)
Total   convolutionColumnsGPU() time: 1.059738 msecs
Average convolutionColumnsGPU() time: 1.059738 msecs; //4452.602769 Mpix/s
Reading back GPU results...
Checking the results...
...running convolutionRowsCPU()
...running convolutionColumnsCPU()
Relative L2 norm: 0.000000E+000
Shutting down...
Test passed
[applications/convolutionTexture] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
Running GPU rows convolution (50 identical iterations)...
iterated 50, average time is 1.062932 msec.
Total   convolutionRowsGPU() time: 53.146595 msecs
Average convolutionRowsGPU() time: 1.062932 msecs; //4439.223266 Mpix/s
Copying convolutionRowGPU() output back to the texture...
cudaMemcpyToArray() time: 0.990093 msecs; //4765.806309 Mpix/s
Running GPU columns convolution (1 iterations)
Total   convolutionColumnsGPU() time: 1.087312 msecs
Average convolutionColumnsGPU() time: 1.087312 msecs; //4339.687360 Mpix/s
Reading back GPU results...
Checking the results...
...running convolutionRowsCPU()
...running convolutionColumnsCPU()
Relative L2 norm: 0.000000E+000
Shutting down...
Test passed
==19284== NVPROF is profiling process 19284, command: applications/convolutionTexture -device=1 -iters=50
==19284== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==19284== Profiling application: applications/convolutionTexture -device=1 -iters=50
==19284== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 76.71%  61.288ms        60  1.0215ms  1.0182ms  1.0280ms  convolutionRowsKernel(float*, int, int)
 10.63%  8.4961ms         1  8.4961ms  8.4961ms  8.4961ms  [CUDA memcpy DtoH]
 10.31%  8.2387ms         1  8.2387ms  8.2387ms  8.2387ms  [CUDA memcpy HtoA]
  1.24%  993.90us         1  993.90us  993.90us  993.90us  convolutionColumnsKernel(float*, int, int)
  1.10%  880.23us         1  880.23us  880.23us  880.23us  [CUDA memcpy DtoA]
  0.00%  2.5600us         1  2.5600us  2.5600us  2.5600us  [CUDA memcpy HtoD]

==19284== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 55.87%  190.50ms         1  190.50ms  190.50ms  190.50ms  cudaMallocArray
 19.55%  66.657ms        67  994.87us  6.8220us  1.1382ms  cudaDeviceSynchronize
 16.09%  54.875ms         1  54.875ms  54.875ms  54.875ms  cudaDeviceReset
  2.59%  8.8204ms         1  8.8204ms  8.8204ms  8.8204ms  cudaMemcpy
  2.48%  8.4586ms         2  4.2293ms  52.305us  8.4063ms  cudaMemcpyToArray
  1.08%  3.6761ms         1  3.6761ms  3.6761ms  3.6761ms  cudaMalloc
  0.54%  1.8398ms        61  30.159us  28.142us  102.62us  cudaLaunch
  0.53%  1.8028ms        60  30.046us  26.437us  56.000us  cudaEventSynchronize
  0.31%  1.0535ms       182  5.7880us       0ns  291.37us  cuDeviceGetAttribute
  0.24%  830.33us       120  6.9190us  4.8320us  20.751us  cudaEventRecord
  0.15%  527.03us        60  8.7830us  7.9590us  9.3810us  cudaEventElapsedTime
  0.13%  447.43us         1  447.43us  447.43us  447.43us  cudaGetDeviceProperties
  0.10%  357.60us         1  357.60us  357.60us  357.60us  cudaFree
  0.10%  349.36us         1  349.36us  349.36us  349.36us  cudaFreeArray
  0.07%  230.25us        61  3.7740us  3.1270us  24.163us  cudaBindTextureToArray
  0.04%  148.10us         2  74.050us  70.497us  77.604us  cuDeviceGetName
  0.03%  110.59us        61  1.8120us  1.4210us  12.508us  cudaUnbindTexture
  0.03%  93.807us         1  93.807us  93.807us  93.807us  cudaMemcpyToSymbol
  0.02%  64.529us        61  1.0570us     852ns  1.9900us  cudaGetChannelDesc
  0.01%  42.923us       183     234ns       0ns     853ns  cudaSetupArgument
  0.01%  22.453us        61     368ns     284ns     569ns  cudaGetLastError
  0.01%  21.889us        61     358ns     284ns  1.4220us  cudaConfigureCall
  0.00%  12.223us         2  6.1110us  1.1370us  11.086us  cudaEventCreate
  0.00%  11.655us         1  11.655us  11.655us  11.655us  cudaSetDevice
  0.00%  11.087us         2  5.5430us  5.1170us  5.9700us  cuDeviceTotalMem
  0.00%  3.1270us         3  1.0420us     284ns  2.5590us  cuDeviceGetCount
  0.00%  2.2740us         6     379ns       0ns     569ns  cuDeviceGet
  0.00%  1.1370us         1  1.1370us  1.1370us  1.1370us  cudaGetDeviceCount
