"arg:512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out" 
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
WG size of kernel = 16 X 16
pyramidHeight: 1
gridSize: [512, 512]
border:[1, 1]
blockGrid:[37, 37]
targetBlock:[14, 14]
Start computing the transient temperature
Adjust Iters to 39447 for meeting time requirement 10 secs.
iterated 39447, average time is 0.237853 msec.
Ending simulation
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
WG size of kernel = 16 X 16
pyramidHeight: 1
gridSize: [512, 512]
border:[1, 1]
blockGrid:[37, 37]
targetBlock:[14, 14]
Start computing the transient temperature
iterated 50, average time is 0.234852 msec.
Ending simulation
==72308== NVPROF is profiling process 72308, command: applications/hotspot 512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out -device=1 -iters=50
==72308== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==72308== Profiling application: applications/hotspot 512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out -device=1 -iters=50
==72308== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 90.73%  9.8249ms        51  192.65us  189.98us  199.23us  calculate_temp(int, float*, float*, float*, int, int, int, int, float, float, float, float, float)
  6.35%  687.34us         2  343.67us  343.64us  343.70us  [CUDA memcpy HtoD]
  2.92%  316.31us         1  316.31us  316.31us  316.31us  [CUDA memcpy DtoH]

==72308== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 90.64%  189.20ms         3  63.067ms  566.54us  187.73ms  cudaMalloc
  6.03%  12.597ms        51  247.00us  236.51us  608.04us  cudaThreadSynchronize
  0.73%  1.5220ms        51  29.842us  29.279us  31.269us  cudaEventSynchronize
  0.55%  1.1379ms         3  379.30us  177.10us  772.06us  cudaMemcpy
  0.45%  936.65us       182  5.1460us       0ns  289.95us  cuDeviceGetAttribute
  0.39%  813.57us        51  15.952us  15.066us  44.913us  cudaLaunch
  0.34%  702.41us       102  6.8860us  4.8320us  9.3810us  cudaEventRecord
  0.30%  634.19us         1  634.19us  634.19us  634.19us  cudaGetDeviceProperties
  0.22%  455.11us        51  8.9230us  8.2430us  9.9490us  cudaEventElapsedTime
  0.19%  393.14us         3  131.05us  89.259us  161.46us  cudaFree
  0.07%  144.69us         2  72.345us  68.224us  76.467us  cuDeviceGetName
  0.06%  124.79us       663     188ns       0ns     853ns  cudaSetupArgument
  0.01%  22.177us        51     434ns     284ns  2.2740us  cudaConfigureCall
  0.01%  14.214us         2  7.1070us  7.1070us  7.1070us  cudaDeviceSynchronize
  0.01%  13.644us         1  13.644us  13.644us  13.644us  cudaSetDevice
  0.01%  11.086us         2  5.5430us  5.4010us  5.6850us  cuDeviceTotalMem
  0.00%  6.5370us         2  3.2680us     852ns  5.6850us  cudaEventCreate
  0.00%  3.1280us         3  1.0420us     284ns  2.5590us  cuDeviceGetCount
  0.00%  1.9900us         1  1.9900us  1.9900us  1.9900us  cudaGetDeviceCount
  0.00%  1.7070us         6     284ns       0ns     569ns  cuDeviceGet
