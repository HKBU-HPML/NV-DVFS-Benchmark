[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 14.789276 msec
Performance= 145.21 GFlop/s, Time= 14.789 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==13404== NVPROF is profiling process 13404, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==13404== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==13404== Profiling result:
==13404== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                        achieved_occupancy                        Achieved Occupancy    0.992794    0.993889    0.993420
         52                             sm_efficiency                   Multiprocessor Activity      98.89%      99.41%      99.22%
         52                 warp_execution_efficiency                 Warp Execution Efficiency     100.00%     100.00%     100.00%
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 33.420042 msec
Performance= 64.26 GFlop/s, Time= 33.420 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==12956== NVPROF is profiling process 12956, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==12956== Some kernel(s) will be replayed on device 1 in order to collect all events/metrics.
==12956== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==12956== Profiling result:
==12956== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                  eligible_warps_per_cycle           Eligible Warps Per Active Cycle    1.838678    1.843765    1.841161
         52                    dram_read_transactions           Device Memory Read Transactions     4324443     4325516     4325063
         52                      dram_read_throughput             Device Memory Read Throughput  19.481GB/s  19.574GB/s  19.535GB/s
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 30.407005 msec
Performance= 70.62 GFlop/s, Time= 30.407 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==15432== NVPROF is profiling process 15432, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==15432== Some kernel(s) will be replayed on device 1 in order to collect all events/metrics.
==15432== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==15432== Profiling result:
==15432== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                   dram_write_transactions          Device Memory Write Transactions      156825      159833      159456
         52                     dram_write_throughput            Device Memory Write Throughput  726.54MB/s  740.54MB/s  737.19MB/s
         52                      l2_read_transactions                      L2 Read Transactions     8388679     8389048     8388826
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 35.140843 msec
Performance= 61.11 GFlop/s, Time= 35.141 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==15152== NVPROF is profiling process 15152, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==15152== Some kernel(s) will be replayed on device 1 in order to collect all events/metrics.
==15152== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==15152== Profiling result:
==15152== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                        l2_read_throughput                     L2 Throughput (Reads)  37.808GB/s  37.992GB/s  37.918GB/s
         52                     l2_write_transactions                     L2 Write Transactions      131078      131106      131079
         52                       l2_write_throughput                    L2 Throughput (Writes)  604.99MB/s  607.90MB/s  605.58MB/s
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 9.860921 msec
Performance= 217.78 GFlop/s, Time= 9.861 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==9676== NVPROF is profiling process 9676, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==9676== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==9676== Profiling result:
==9676== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                  shared_load_transactions                  Shared Load Transactions    50331648    50331648    50331648
         52                    shared_load_throughput             Shared Memory Load Throughput  906.12GB/s  914.19GB/s  910.49GB/s
         52                 shared_store_transactions                 Shared Store Transactions     2097152     2097152     2097152
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 13.230104 msec
Performance= 162.32 GFlop/s, Time= 13.230 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==7248== NVPROF is profiling process 7248, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==7248== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==7248== Profiling result:
==7248== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                   shared_store_throughput            Shared Memory Store Throughput  37.716GB/s  38.102GB/s  37.919GB/s
         52                         branch_efficiency                         Branch Efficiency     100.00%     100.00%     100.00%
         52                               cf_executed        Executed Control-Flow Instructions     1114112     1114112     1114112
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 305.454021 msec
Performance= 7.03 GFlop/s, Time= 305.454 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==3224== NVPROF is profiling process 3224, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==3224== Some kernel(s) will be replayed on device 1 in order to collect all events/metrics.
==3224== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==3224== Profiling result:
==3224== Metric result:
Invocations                               Metric Name                            Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                                 cf_issued              Issued Control-Flow Instructions     1114112     1114112     1114112
         52                             flop_count_sp   Floating Point Operations(Single Precision)  2147483648  2147483648  2147483648
         52                        flop_sp_efficiency                  FLOP Efficiency(Peak Single)      13.32%      13.42%      13.37%
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 51.738673 msec
Performance= 41.51 GFlop/s, Time= 51.739 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==13812== NVPROF is profiling process 13812, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==13812== Some kernel(s) will be replayed on device 1 in order to collect all events/metrics.
==13812== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==13812== Profiling result:
==13812== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                            gld_throughput                    Global Load Throughput  37.877GB/s  38.010GB/s  37.936GB/s
         52                          gld_transactions                  Global Load Transactions    16777216    16777216    16777216
         52                            gst_throughput                   Global Store Throughput  606.04MB/s  608.17MB/s  605.58MB/s
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 13.784042 msec
Performance= 155.79 GFlop/s, Time= 13.784 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==16084== NVPROF is profiling process 16084, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==16084== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==16084== Profiling result:
==16084== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                          gst_transactions                 Global Store Transactions      131072      131072      131072
         52                               inst_issued                       Instructions Issued    97850478    97850952    97850701
         52                             inst_per_warp                     Instructions per warp  2.9860e+03  2.9860e+03  2.9860e+03
[Matrix Multiply Using CUDA] - Starting...
GPU Device 1: "GeForce GTX 980" with compute capability 5.2

MatrixA(1024,1024), MatrixB(1024,1024)
Computing result using CUDA Kernel...
done
iterated 50, average time is 10.633885 msec
Performance= 201.95 GFlop/s, Time= 10.634 msec, Size= 2147483648 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS

Note: For peak performance, please refer to the matrixMulCUBLAS example.
==15480== NVPROF is profiling process 15480, command: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==15480== Profiling application: applications/matrixMul -wA=1024 -hA=1024 -wB=1024 -hB=1024 -device=1 -iters=50
==15480== Profiling result:
==15480== Metric result:
Invocations                               Metric Name                        Metric Description         Min         Max         Avg
Device "GeForce GTX 980 (1)"
    Kernel: void matrixMulCUDA<int=32>(float*, float*, float*, int, int)
         52                                       ipc                              Executed IPC    1.570720    1.578754    1.575249
