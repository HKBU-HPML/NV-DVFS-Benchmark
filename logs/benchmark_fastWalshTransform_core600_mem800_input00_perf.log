"arg:" 
applications\fastWalshTransform Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
...allocating CPU memory
...allocating GPU memory
...generating data
Data length: 8388608; kernel length: 128
Running GPU dyadic convolution using Fast Walsh Transform...
Adjust Iters to 287 for meeting time requirement 10 secs.
iterated 287, average time is 34.773240 msecs.
GPU total   time: 9979.919926 ms
GPU average time: 34.773240 ms; GOP/s: 8.322692
Reading back GPU results...
Running straightforward CPU dyadic convolution...
Comparing the results...
Shutting down...
L2 norm: 1.#QNAN0E+000
Test failed!
applications/fastWalshTransform Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
...allocating CPU memory
...allocating GPU memory
...generating data
Data length: 8388608; kernel length: 128
Running GPU dyadic convolution using Fast Walsh Transform...
iterated 50, average time is 34.791915 msecs.
GPU total   time: 1739.595741 ms
GPU average time: 34.791915 ms; GOP/s: 8.318225
Reading back GPU results...
Running straightforward CPU dyadic convolution...
Comparing the results...
Shutting down...
L2 norm: 1.#QNAN0E+000
Test failed!
==9680== NVPROF is profiling process 9680, command: applications/fastWalshTransform -device=1 -iters=50
==9680== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==9680== Profiling application: applications/fastWalshTransform -device=1 -iters=50
==9680== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 78.46%  1.40680s       918  1.5325ms  1.5210ms  1.5470ms  fwtBatch2Kernel(float*, float*, int)
 13.38%  239.97ms       153  1.5685ms  1.5604ms  1.5816ms  fwtBatch1Kernel(float*, float*, int)
  6.49%  116.43ms        51  2.2830ms  2.2754ms  2.2884ms  modulateKernel(float*, float*, int)
  0.87%  15.535ms         1  15.535ms  15.535ms  15.535ms  [CUDA memcpy DtoH]
  0.80%  14.264ms         2  7.1321ms  2.1440us  14.262ms  [CUDA memcpy HtoD]
  0.00%  1.1520us         1  1.1520us  1.1520us  1.1520us  [CUDA memset]

==9680== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 85.52%  1.77213s        51  34.748ms  34.690ms  34.926ms  cudaThreadSynchronize
  8.88%  184.12ms         2  92.058ms  6.5506ms  177.57ms  cudaMalloc
  2.88%  59.777ms         1  59.777ms  59.777ms  59.777ms  cudaDeviceReset
  1.49%  30.848ms         3  10.283ms  933.81us  15.922ms  cudaMemcpy
  0.73%  15.113ms      1122  13.469us  11.371us  49.747us  cudaLaunch
  0.19%  3.8947ms        51  76.366us  50.599us  183.64us  cudaEventSynchronize
  0.05%  1.0975ms         2  548.77us  538.40us  559.15us  cudaFree
  0.05%  1.0657ms       182  5.8550us       0ns  296.49us  cuDeviceGetAttribute
  0.04%  793.38us       102  7.7780us  5.4010us  27.573us  cudaEventRecord
  0.04%  780.59us         3  260.20us  7.3910us  755.01us  cudaDeviceSynchronize
  0.03%  695.58us      3366     206ns       0ns  1.7050us  cudaSetupArgument
  0.03%  608.33us         1  608.33us  608.33us  608.33us  cudaGetDeviceProperties
  0.02%  500.30us        51  9.8090us  9.0960us  15.918us  cudaEventElapsedTime
  0.01%  272.32us      1071     254ns       0ns     569ns  cudaGetLastError
  0.01%  256.13us      1122     228ns       0ns  4.2640us  cudaConfigureCall
  0.01%  158.05us         2  79.025us  68.507us  89.543us  cuDeviceGetName
  0.00%  98.071us         1  98.071us  98.071us  98.071us  cudaMemset
  0.00%  13.076us         2  6.5380us  1.1370us  11.939us  cudaEventCreate
  0.00%  11.371us         2  5.6850us  5.4010us  5.9700us  cuDeviceTotalMem
  0.00%  10.518us         1  10.518us  10.518us  10.518us  cudaSetDevice
  0.00%  2.8440us         3     948ns     285ns  2.2740us  cuDeviceGetCount
  0.00%  2.2730us         6     378ns     284ns     569ns  cuDeviceGet
  0.00%     853ns         1     853ns     853ns     853ns  cudaGetDeviceCount
