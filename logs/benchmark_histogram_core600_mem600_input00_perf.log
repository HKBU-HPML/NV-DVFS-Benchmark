"arg:" 
[[histogram]] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
CUDA device [GeForce GTX 980] has 16 Multi-Processors, Compute 5.2
Initializing data...
...allocating CPU memory.
...generating input data
...allocating GPU memory and copying input data

Initializing 256-bin histogram...
Running 256-bin GPU histogram for 67108864 bytes (100 runs)...

Adjust Iters to 2690 for meeting time requirement 10 secs.
iterated 2690, average time is 3.809573 msec.
histogram256() time (total) : 10.24775 sec, 17615.8476 MB/sec

histogram256, Throughput = 17615.8476 MB/s, Time = 0.00381 s, Size = 67108864 Bytes, NumDevsUsed = 1, Workgroup = 192

Validating GPU results...
 ...reading back GPU results
 ...histogram256CPU()
 ...comparing the results
 ...256-bin histograms match

Shutting down 256-bin histogram...


Shutting down...
[histogram] - Test Summary
Test passed
[[histogram]] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
CUDA device [GeForce GTX 980] has 16 Multi-Processors, Compute 5.2
Initializing data...
...allocating CPU memory.
...generating input data
...allocating GPU memory and copying input data

Initializing 256-bin histogram...
Running 256-bin GPU histogram for 67108864 bytes (50 runs)...

iterated 50, average time is 3.811213 msec.
histogram256() time (total) : 0.19056 sec, 17608.2670 MB/sec

histogram256, Throughput = 17608.2670 MB/s, Time = 0.00381 s, Size = 67108864 Bytes, NumDevsUsed = 1, Workgroup = 192

Validating GPU results...
 ...reading back GPU results
 ...histogram256CPU()
 ...comparing the results
 ...256-bin histograms match

Shutting down 256-bin histogram...


Shutting down...
[histogram] - Test Summary
Test passed
==84448== NVPROF is profiling process 84448, command: applications/histogram -device=1 -iters=50
==84448== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==84448== Profiling application: applications/histogram -device=1 -iters=50
==84448== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 86.54%  190.00ms        51  3.7255ms  3.6802ms  3.7376ms  histogram256Kernel(unsigned int*, unsigned int*, unsigned int)
 13.10%  28.769ms         1  28.769ms  28.769ms  28.769ms  [CUDA memcpy HtoD]
  0.35%  770.83us        51  15.114us  14.592us  16.703us  mergeHistogram256Kernel(unsigned int*, unsigned int*, unsigned int)
  0.00%  5.4720us         1  5.4720us  5.4720us  5.4720us  [CUDA memcpy DtoH]

==84448== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 41.97%  207.52ms         3  69.173ms  560.85us  205.56ms  cudaMalloc
 39.36%  194.59ms        53  3.6714ms  6.5380us  3.8339ms  cudaDeviceSynchronize
 11.10%  54.886ms         1  54.886ms  54.886ms  54.886ms  cudaDeviceReset
  5.63%  27.820ms         2  13.910ms  69.929us  27.750ms  cudaMemcpy
  0.53%  2.6263ms        51  51.496us  28.995us  162.32us  cudaEventSynchronize
  0.31%  1.5373ms       102  15.071us  13.076us  55.148us  cudaLaunch
  0.26%  1.3005ms       182  7.1450us       0ns  318.38us  cuDeviceGetAttribute
  0.25%  1.2604ms         2  630.21us  629.65us  630.78us  cudaGetDeviceProperties
  0.24%  1.2033ms         3  401.10us  132.75us  877.81us  cudaFree
  0.16%  782.29us       102  7.6690us  5.1160us  20.467us  cudaEventRecord
  0.09%  455.67us        51  8.9340us  7.6750us  20.183us  cudaEventElapsedTime
  0.05%  225.42us         2  112.71us  68.792us  156.63us  cuDeviceGetName
  0.02%  105.18us       306     343ns       0ns  11.086us  cudaSetupArgument
  0.01%  47.191us       102     462ns       0ns  11.370us  cudaConfigureCall
  0.01%  25.867us       102     253ns       0ns     285ns  cudaGetLastError
  0.00%  16.488us         2  8.2440us  1.1370us  15.351us  cudaEventCreate
  0.00%  12.792us         2  6.3960us  5.9700us  6.8220us  cuDeviceTotalMem
  0.00%  11.655us         1  11.655us  11.655us  11.655us  cudaSetDevice
  0.00%  3.6960us         6     616ns     284ns  1.1370us  cuDeviceGet
  0.00%  3.1270us         3  1.0420us     284ns  2.5590us  cuDeviceGetCount
  0.00%     852ns         1     852ns     852ns     852ns  cudaGetDeviceCount
