"arg:" 
[applications\convolutionSeparable] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Image Width x Height = 3072 x 3072

Allocating and initializing host arrays...
Allocating and initializing CUDA arrays...
Running GPU convolution (100 identical iterations)...

Adjust Iters to 3435 for meeting time requirement 10 secs.
iterated 3435, average time is 2.871752 msec.

Reading back GPU results...

Checking the results...
 ...running convolutionRowCPU()
 ...running convolutionColumnCPU()
 ...comparing the results
 ...Relative L2 norm: 0.000000E+000

Shutting down...
Test passed
[applications/convolutionSeparable] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Image Width x Height = 3072 x 3072

Allocating and initializing host arrays...
Allocating and initializing CUDA arrays...
Running GPU convolution (50 identical iterations)...

iterated 50, average time is 2.867104 msec.

Reading back GPU results...

Checking the results...
 ...running convolutionRowCPU()
 ...running convolutionColumnCPU()
 ...comparing the results
 ...Relative L2 norm: 0.000000E+000

Shutting down...
Test passed
==30244== NVPROF is profiling process 30244, command: applications/convolutionSeparable -device=1 -iters=50
==30244== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==30244== Profiling application: applications/convolutionSeparable -device=1 -iters=50
==30244== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 41.92%  73.888ms        51  1.4488ms  1.4450ms  1.4610ms  convolutionColumnsKernel(float*, float*, int, int, int)
 39.15%  69.002ms        51  1.3530ms  1.3488ms  1.3603ms  convolutionRowsKernel(float*, float*, int, int, int)
  9.80%  17.266ms         1  17.266ms  17.266ms  17.266ms  [CUDA memcpy DtoH]
  9.14%  16.111ms         2  8.0555ms  2.5920us  16.108ms  [CUDA memcpy HtoD]

==30244== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 44.90%  208.05ms         3  69.350ms  7.0270ms  193.88ms  cudaMalloc
 31.76%  147.13ms        51  2.8850ms  2.8498ms  3.5948ms  cudaThreadSynchronize
 14.19%  65.738ms         1  65.738ms  65.738ms  65.738ms  cudaDeviceReset
  7.20%  33.360ms         2  16.680ms  15.660ms  17.700ms  cudaMemcpy
  0.43%  1.9950ms        51  39.116us  30.132us  54.863us  cudaEventSynchronize
  0.38%  1.7383ms         3  579.43us  498.03us  708.39us  cudaFree
  0.36%  1.6621ms       102  16.295us  13.360us  59.696us  cudaLaunch
  0.23%  1.0657ms       102  10.448us  5.1160us  21.035us  cudaEventRecord
  0.23%  1.0620ms       182  5.8350us       0ns  282.56us  cuDeviceGetAttribute
  0.13%  596.67us         1  596.67us  596.67us  596.67us  cudaGetDeviceProperties
  0.11%  503.43us        51  9.8710us  7.6750us  19.899us  cudaEventElapsedTime
  0.04%  168.00us         2  84.000us  69.361us  98.640us  cuDeviceGetName
  0.02%  105.75us       510     207ns       0ns  1.4210us  cudaSetupArgument
  0.01%  30.986us       102     303ns       0ns  3.6950us  cudaConfigureCall
  0.01%  29.847us         1  29.847us  29.847us  29.847us  cudaMemcpyToSymbol
  0.01%  26.444us       102     259ns       0ns     285ns  cudaGetLastError
  0.00%  15.635us         2  7.8170us  1.1370us  14.498us  cudaEventCreate
  0.00%  14.782us         2  7.3910us  7.3910us  7.3910us  cudaDeviceSynchronize
  0.00%  12.507us         2  6.2530us  5.9690us  6.5380us  cuDeviceTotalMem
  0.00%  11.086us         1  11.086us  11.086us  11.086us  cudaSetDevice
  0.00%  2.8430us         3     947ns     284ns  2.2740us  cuDeviceGetCount
  0.00%  2.8420us         6     473ns       0ns     853ns  cuDeviceGet
  0.00%     853ns         1     853ns     853ns     853ns  cudaGetDeviceCount
