"arg:" 
applications\scan Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Allocating and initializing host arrays...
Allocating and initializing CUDA arrays...
Initializing CUDA-C scan...

***Running GPU scan for large arrays (100 identical iterations)...

Running scan for 262144 elements (26 arrays)...
Adjust Iters to 2853 for meeting time requirement 10 secs.
Validating the results...
...reading back GPU results
...scanExclusiveHost()
 ...comparing the results
 ...Results Match


scan, Total Time = 10.02038 s
scan, Throughput = 74.6376 MElements/s, Time = 0.00351 s, Size = 262144 Elements, NumDevsUsed = 1, Workgroup = 256

Shutting down...
applications/scan Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Allocating and initializing host arrays...
Allocating and initializing CUDA arrays...
Initializing CUDA-C scan...

***Running GPU scan for large arrays (50 identical iterations)...

Running scan for 262144 elements (26 arrays)...
Validating the results...
...reading back GPU results
...scanExclusiveHost()
 ...comparing the results
 ...Results Match


scan, Total Time = 0.17570 s
scan, Throughput = 74.6000 MElements/s, Time = 0.00351 s, Size = 262144 Elements, NumDevsUsed = 1, Workgroup = 256

Shutting down...
==85232== NVPROF is profiling process 85232, command: applications/scan -device=1 -iters=50
==85232== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==85232== Profiling application: applications/scan -device=1 -iters=50
==85232== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 43.60%  86.998ms        51  1.7058ms  1.7010ms  1.7112ms  scanExclusiveShared(uint4*, uint4*, unsigned int)
 43.45%  86.711ms        51  1.7002ms  1.6956ms  1.7068ms  uniformUpdate(uint4*, unsigned int*)
  6.20%  12.368ms         1  12.368ms  12.368ms  12.368ms  [CUDA memcpy DtoH]
  6.09%  12.151ms         1  12.151ms  12.151ms  12.151ms  [CUDA memcpy HtoD]
  0.66%  1.3192ms        51  25.867us  22.687us  28.671us  scanExclusiveShared2(unsigned int*, unsigned int*, unsigned int*, unsigned int, unsigned int)

==85232== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 43.39%  204.54ms         3  68.181ms  1.3943ms  197.71ms  cudaMalloc
 38.01%  179.19ms        51  3.5135ms  3.4936ms  3.5283ms  cudaThreadSynchronize
 11.41%  53.771ms         1  53.771ms  53.771ms  53.771ms  cudaDeviceReset
  5.06%  23.874ms         2  11.937ms  11.165ms  12.709ms  cudaMemcpy
  0.63%  2.9751ms        51  58.335us  44.061us  124.22us  cudaEventSynchronize
  0.51%  2.4185ms       153  15.807us  13.076us  53.158us  cudaLaunch
  0.27%  1.2937ms       182  7.1080us       0ns  324.63us  cuDeviceGetAttribute
  0.24%  1.1302ms         3  376.75us  188.75us  481.83us  cudaFree
  0.18%  829.20us       102  8.1290us  5.4010us  17.625us  cudaEventRecord
  0.10%  455.39us         1  455.39us  455.39us  455.39us  cudaGetDeviceProperties
  0.09%  442.31us        51  8.6720us  7.9590us  10.518us  cudaEventElapsedTime
  0.04%  181.65us         2  90.822us  72.487us  109.16us  cuDeviceGetName
  0.03%  139.86us       510     274ns       0ns  11.086us  cudaSetupArgument
  0.02%  90.680us       153     592ns       0ns  11.371us  cudaConfigureCall
  0.01%  42.638us       153     278ns       0ns     569ns  cudaGetLastError
  0.01%  25.016us         3  8.3380us  6.2540us  11.371us  cudaDeviceSynchronize
  0.00%  12.223us         2  6.1110us  5.6850us  6.5380us  cuDeviceTotalMem
  0.00%  11.371us         1  11.371us  11.371us  11.371us  cudaSetDevice
  0.00%  11.087us         2  5.5430us  1.1380us  9.9490us  cudaEventCreate
  0.00%  3.1270us         3  1.0420us     285ns  2.2740us  cuDeviceGetCount
  0.00%  2.5580us         6     426ns     284ns     853ns  cuDeviceGet
  0.00%     853ns         1     853ns     853ns     853ns  cudaGetDeviceCount
