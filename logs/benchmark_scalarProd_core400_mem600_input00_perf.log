"arg:" 
applications\scalarProd Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
...allocating CPU memory.
...allocating GPU memory.
...generating input data in CPU mem.
...copying input data to GPU mem.
Data init done.
Executing GPU kernel...
Adjust Iters to 31162 for meeting time requirement 10 secs.
GPU total   time: 9774.835580 msecs.
GPU average time: 0.313678 msecs.
Reading back GPU result...
Checking GPU results...
..running CPU scalar product calculation
...comparing the results
Shutting down...
L1 error: 2.857647E-008
Test passed
applications/scalarProd Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
...allocating CPU memory.
...allocating GPU memory.
...generating input data in CPU mem.
...copying input data to GPU mem.
Data init done.
Executing GPU kernel...
GPU total   time: 15.674048 msecs.
GPU average time: 0.313481 msecs.
Reading back GPU result...
Checking GPU results...
..running CPU scalar product calculation
...comparing the results
Shutting down...
L1 error: 2.857647E-008
Test passed
==71796== NVPROF is profiling process 71796, command: applications/scalarProd -device=1 -iters=50
==71796== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==71796== Profiling application: applications/scalarProd -device=1 -iters=50
==71796== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 81.18%  13.648ms        51  267.60us  247.45us  270.97us  scalarProdGPU(float*, float*, float*, int, int)
 18.79%  3.1583ms         2  1.5791ms  1.5744ms  1.5838ms  [CUDA memcpy HtoD]
  0.04%  6.1120us         1  6.1120us  6.1120us  6.1120us  [CUDA memcpy DtoH]

==71796== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 67.10%  189.36ms         3  63.120ms  548.06us  187.66ms  cudaMalloc
 23.51%  66.336ms         1  66.336ms  66.336ms  66.336ms  cudaDeviceReset
  5.82%  16.435ms        51  322.26us  312.98us  480.12us  cudaThreadSynchronize
  1.17%  3.2912ms         3  1.0971ms  67.371us  1.9495ms  cudaMemcpy
  0.60%  1.6809ms        51  32.958us  28.710us  60.833us  cudaEventSynchronize
  0.39%  1.0984ms       182  6.0350us       0ns  315.82us  cuDeviceGetAttribute
  0.29%  813.85us        51  15.957us  14.781us  55.431us  cudaLaunch
  0.27%  773.20us         3  257.73us  7.1070us  758.70us  cudaDeviceSynchronize
  0.23%  656.93us       102  6.4400us  4.5480us  8.8120us  cudaEventRecord
  0.23%  639.88us         1  639.88us  639.88us  639.88us  cudaGetDeviceProperties
  0.15%  429.24us        51  8.4160us  7.6750us  21.035us  cudaEventElapsedTime
  0.15%  412.19us         3  137.40us  113.42us  152.08us  cudaFree
  0.05%  147.53us         2  73.766us  69.076us  78.457us  cuDeviceGetName
  0.02%  50.601us       255     198ns       0ns  1.4210us  cudaSetupArgument
  0.02%  46.615us        51     914ns     284ns  11.086us  cudaConfigureCall
  0.00%  13.361us         1  13.361us  13.361us  13.361us  cudaSetDevice
  0.00%  11.087us         2  5.5430us  5.4010us  5.6860us  cuDeviceTotalMem
  0.00%  9.6660us         2  4.8330us  1.4220us  8.2440us  cudaEventCreate
  0.00%  3.6960us         3  1.2320us     568ns  2.5590us  cuDeviceGetCount
  0.00%  1.9900us         6     331ns       0ns     569ns  cuDeviceGet
  0.00%     853ns         1     853ns     853ns     853ns  cudaGetDeviceCount
  0.00%     284ns         1     284ns     284ns     284ns  cudaGetLastError
