"arg:" 
[applications\convolutionTexture] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
Running GPU rows convolution (100 identical iterations)...
Adjust Iters to 11116 for meeting time requirement 10 secs.
iterated 11116, average time is 0.900950 msec.
Total   convolutionRowsGPU() time: 10014.965820 msecs
Average convolutionRowsGPU() time: 0.900950 msecs; //5237.348828 Mpix/s
Copying convolutionRowGPU() output back to the texture...
cudaMemcpyToArray() time: 0.794803 msecs; //5936.803692 Mpix/s
Running GPU columns convolution (1 iterations)
Total   convolutionColumnsGPU() time: 0.901687 msecs
Average convolutionColumnsGPU() time: 0.901687 msecs; //5233.071786 Mpix/s
Reading back GPU results...
Checking the results...
...running convolutionRowsCPU()
...running convolutionColumnsCPU()
Relative L2 norm: 0.000000E+000
Shutting down...
Test passed
[applications/convolutionTexture] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
Running GPU rows convolution (50 identical iterations)...
iterated 50, average time is 0.911066 msec.
Total   convolutionRowsGPU() time: 45.553310 msecs
Average convolutionRowsGPU() time: 0.911066 msecs; //5179.197542 Mpix/s
Copying convolutionRowGPU() output back to the texture...
cudaMemcpyToArray() time: 0.830336 msecs; //5682.747025 Mpix/s
Running GPU columns convolution (1 iterations)
Total   convolutionColumnsGPU() time: 0.944327 msecs
Average convolutionColumnsGPU() time: 0.944327 msecs; //4996.780139 Mpix/s
Reading back GPU results...
Checking the results...
...running convolutionRowsCPU()
...running convolutionColumnsCPU()
Relative L2 norm: 0.000000E+000
Shutting down...
Test passed
==40340== NVPROF is profiling process 40340, command: applications/convolutionTexture -device=1 -iters=50
==40340== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==40340== Profiling application: applications/convolutionTexture -device=1 -iters=50
==40340== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 73.95%  50.995ms        60  849.92us  846.89us  854.60us  convolutionRowsKernel(float*, int, int)
 12.14%  8.3698ms         1  8.3698ms  8.3698ms  8.3698ms  [CUDA memcpy DtoH]
 11.68%  8.0560ms         1  8.0560ms  8.0560ms  8.0560ms  [CUDA memcpy HtoA]
  1.21%  833.71us         1  833.71us  833.71us  833.71us  convolutionColumnsKernel(float*, int, int)
  1.01%  697.90us         1  697.90us  697.90us  697.90us  [CUDA memcpy DtoA]
  0.00%  2.4320us         1  2.4320us  2.4320us  2.4320us  [CUDA memcpy HtoD]

==40340== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 57.27%  195.40ms         1  195.40ms  195.40ms  195.40ms  cudaMallocArray
 17.06%  58.213ms         1  58.213ms  58.213ms  58.213ms  cudaDeviceReset
 16.79%  57.279ms        67  854.91us  7.1060us  986.97us  cudaDeviceSynchronize
  2.55%  8.7053ms         1  8.7053ms  8.7053ms  8.7053ms  cudaMemcpy
  2.43%  8.3056ms         2  4.1528ms  55.432us  8.2502ms  cudaMemcpyToArray
  1.10%  3.7438ms         1  3.7438ms  3.7438ms  3.7438ms  cudaMalloc
  0.84%  2.8785ms        60  47.974us  42.924us  86.985us  cudaEventSynchronize
  0.55%  1.8682ms        61  30.625us  28.426us  99.493us  cudaLaunch
  0.38%  1.3133ms       182  7.2150us       0ns  333.44us  cuDeviceGetAttribute
  0.26%  897.98us       120  7.4830us  5.4010us  20.752us  cudaEventRecord
  0.17%  579.33us         1  579.33us  579.33us  579.33us  cudaGetDeviceProperties
  0.17%  576.20us        60  9.6030us  9.0970us  13.360us  cudaEventElapsedTime
  0.10%  352.49us         1  352.49us  352.49us  352.49us  cudaFree
  0.09%  316.67us         1  316.67us  316.67us  316.67us  cudaFreeArray
  0.06%  218.32us        61  3.5790us  3.1270us  13.076us  cudaBindTextureToArray
  0.05%  183.07us         2  91.533us  73.056us  110.01us  cuDeviceGetName
  0.03%  104.04us        61  1.7050us  1.4210us  3.1270us  cudaUnbindTexture
  0.02%  84.143us         1  84.143us  84.143us  84.143us  cudaMemcpyToSymbol
  0.02%  60.836us        61     997ns     852ns  1.7060us  cudaGetChannelDesc
  0.01%  42.639us       183     233ns       0ns     569ns  cudaSetupArgument
  0.01%  22.456us        61     368ns     284ns  1.7050us  cudaConfigureCall
  0.01%  19.608us        61     321ns     284ns     569ns  cudaGetLastError
  0.00%  12.508us         2  6.2540us  5.9700us  6.5380us  cuDeviceTotalMem
  0.00%  11.939us         2  5.9690us  1.1370us  10.802us  cudaEventCreate
  0.00%  11.371us         1  11.371us  11.371us  11.371us  cudaSetDevice
  0.00%  3.6960us         6     616ns     284ns  1.1370us  cuDeviceGet
  0.00%  3.1260us         3  1.0420us     284ns  2.2740us  cuDeviceGetCount
  0.00%     853ns         1     853ns     853ns     853ns  cudaGetDeviceCount
