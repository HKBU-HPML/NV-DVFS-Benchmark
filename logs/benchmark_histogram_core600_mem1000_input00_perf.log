"arg:" 
[[histogram]] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
CUDA device [GeForce GTX 980] has 16 Multi-Processors, Compute 5.2
Initializing data...
...allocating CPU memory.
...generating input data
...allocating GPU memory and copying input data

Initializing 256-bin histogram...
Running 256-bin GPU histogram for 67108864 bytes (100 runs)...

Adjust Iters to 2641 for meeting time requirement 10 secs.
iterated 2641, average time is 3.812967 msec.
histogram256() time (total) : 10.07005 sec, 17600.1672 MB/sec

histogram256, Throughput = 17600.1672 MB/s, Time = 0.00381 s, Size = 67108864 Bytes, NumDevsUsed = 1, Workgroup = 192

Validating GPU results...
 ...reading back GPU results
 ...histogram256CPU()
 ...comparing the results
 ...256-bin histograms match

Shutting down 256-bin histogram...


Shutting down...
[histogram] - Test Summary
Test passed
[[histogram]] - Starting...
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
CUDA device [GeForce GTX 980] has 16 Multi-Processors, Compute 5.2
Initializing data...
...allocating CPU memory.
...generating input data
...allocating GPU memory and copying input data

Initializing 256-bin histogram...
Running 256-bin GPU histogram for 67108864 bytes (50 runs)...

iterated 50, average time is 3.797937 msec.
histogram256() time (total) : 0.18990 sec, 17669.8219 MB/sec

histogram256, Throughput = 17669.8219 MB/s, Time = 0.00380 s, Size = 67108864 Bytes, NumDevsUsed = 1, Workgroup = 192

Validating GPU results...
 ...reading back GPU results
 ...histogram256CPU()
 ...comparing the results
 ...256-bin histograms match

Shutting down 256-bin histogram...


Shutting down...
[histogram] - Test Summary
Test passed
==29200== NVPROF is profiling process 29200, command: applications/histogram -device=1 -iters=50
==29200== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==29200== Profiling application: applications/histogram -device=1 -iters=50
==29200== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 86.15%  189.86ms        51  3.7228ms  3.7140ms  3.7290ms  histogram256Kernel(unsigned int*, unsigned int*, unsigned int)
 13.53%  29.824ms         1  29.824ms  29.824ms  29.824ms  [CUDA memcpy HtoD]
  0.32%  704.40us        51  13.811us  13.599us  15.264us  mergeHistogram256Kernel(unsigned int*, unsigned int*, unsigned int)
  0.00%  3.7440us         1  3.7440us  3.7440us  3.7440us  [CUDA memcpy DtoH]

==29200== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 42.50%  212.92ms         3  70.975ms  557.73us  210.92ms  cudaMalloc
 38.74%  194.09ms        53  3.6620ms  7.1060us  3.8595ms  cudaDeviceSynchronize
 11.22%  56.240ms         1  56.240ms  56.240ms  56.240ms  cudaDeviceReset
  5.76%  28.849ms         2  14.425ms  79.025us  28.770ms  cudaMemcpy
  0.42%  2.1141ms        51  41.452us  28.995us  97.218us  cudaEventSynchronize
  0.33%  1.6419ms       102  16.097us  14.497us  54.010us  cudaLaunch
  0.26%  1.2965ms         3  432.18us  192.16us  907.94us  cudaFree
  0.24%  1.1811ms         2  590.56us  582.46us  598.66us  cudaGetDeviceProperties
  0.21%  1.0731ms       182  5.8960us       0ns  299.33us  cuDeviceGetAttribute
  0.17%  843.98us       102  8.2740us  5.6850us  21.605us  cudaEventRecord
  0.09%  441.75us        51  8.6610us  7.3910us  15.919us  cudaEventElapsedTime
  0.03%  167.72us         2  83.858us  69.361us  98.355us  cuDeviceGetName
  0.01%  65.097us       306     212ns       0ns  1.4210us  cudaSetupArgument
  0.01%  35.818us       102     351ns       0ns  4.2640us  cudaConfigureCall
  0.01%  26.439us       102     259ns       0ns     569ns  cudaGetLastError
  0.00%  15.918us         2  7.9590us  1.1370us  14.781us  cudaEventCreate
  0.00%  11.940us         2  5.9700us  5.4010us  6.5390us  cuDeviceTotalMem
  0.00%  11.370us         1  11.370us  11.370us  11.370us  cudaSetDevice
  0.00%  3.4110us         3  1.1370us     568ns  2.2740us  cuDeviceGetCount
  0.00%  2.5590us         6     426ns       0ns  1.1370us  cuDeviceGet
  0.00%     853ns         1     853ns     853ns     853ns  cudaGetDeviceCount
