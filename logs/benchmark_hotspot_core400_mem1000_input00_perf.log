"arg:512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out" 
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
WG size of kernel = 16 X 16
pyramidHeight: 1
gridSize: [512, 512]
border:[1, 1]
blockGrid:[37, 37]
targetBlock:[14, 14]
Start computing the transient temperature
Adjust Iters to 29604 for meeting time requirement 10 secs.
iterated 29604, average time is 0.312609 msec.
Ending simulation
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
WG size of kernel = 16 X 16
pyramidHeight: 1
gridSize: [512, 512]
border:[1, 1]
blockGrid:[37, 37]
targetBlock:[14, 14]
Start computing the transient temperature
iterated 50, average time is 0.341236 msec.
Ending simulation
==26684== NVPROF is profiling process 26684, command: applications/hotspot 512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out -device=1 -iters=50
==26684== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==26684== Profiling application: applications/hotspot 512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out -device=1 -iters=50
==26684== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 93.31%  13.996ms        51  274.42us  272.70us  281.24us  calculate_temp(int, float*, float*, float*, int, int, int, int, float, float, float, float, float)
  4.58%  687.57us         2  343.78us  343.70us  343.86us  [CUDA memcpy HtoD]
  2.11%  316.34us         1  316.34us  316.34us  316.34us  [CUDA memcpy DtoH]

==26684== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 87.65%  187.38ms         3  62.461ms  562.84us  185.92ms  cudaMalloc
  8.41%  17.972ms        51  352.40us  338.84us  711.51us  cudaThreadSynchronize
  1.25%  2.6636ms        51  52.226us  47.756us  91.249us  cudaEventSynchronize
  0.52%  1.1129ms         3  370.97us  181.08us  741.08us  cudaMemcpy
  0.49%  1.0566ms       182  5.8050us       0ns  296.49us  cuDeviceGetAttribute
  0.41%  881.50us        51  17.284us  15.919us  43.777us  cudaLaunch
  0.37%  789.97us       102  7.7440us  5.4010us  10.234us  cudaEventRecord
  0.28%  599.80us         1  599.80us  599.80us  599.80us  cudaGetDeviceProperties
  0.24%  513.38us        51  10.066us  9.3800us  21.036us  cudaEventElapsedTime
  0.21%  438.90us         3  146.30us  116.83us  166.30us  cudaFree
  0.07%  158.34us         2  79.167us  68.792us  89.543us  cuDeviceGetName
  0.06%  135.88us       663     204ns       0ns     853ns  cudaSetupArgument
  0.01%  24.442us        51     479ns     284ns  2.5580us  cudaConfigureCall
  0.01%  15.066us         2  7.5330us  7.3910us  7.6750us  cudaDeviceSynchronize
  0.01%  13.929us         1  13.929us  13.929us  13.929us  cudaSetDevice
  0.01%  10.803us         2  5.4010us  5.1170us  5.6860us  cuDeviceTotalMem
  0.00%  6.2540us         2  3.1270us  1.1370us  5.1170us  cudaEventCreate
  0.00%  2.8430us         3     947ns     284ns  2.2740us  cuDeviceGetCount
  0.00%  2.5590us         6     426ns     284ns     569ns  cuDeviceGet
  0.00%  1.9900us         1  1.9900us  1.9900us  1.9900us  cudaGetDeviceCount
