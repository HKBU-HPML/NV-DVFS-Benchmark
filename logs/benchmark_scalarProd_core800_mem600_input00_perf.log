"arg:" 
applications\scalarProd Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
...allocating CPU memory.
...allocating GPU memory.
...generating input data in CPU mem.
...copying input data to GPU mem.
Data init done.
Executing GPU kernel...
Adjust Iters to 31952 for meeting time requirement 10 secs.
GPU total   time: 9895.926016 msecs.
GPU average time: 0.309712 msecs.
Reading back GPU result...
Checking GPU results...
..running CPU scalar product calculation
...comparing the results
Shutting down...
L1 error: 2.857647E-008
Test passed
applications/scalarProd Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Initializing data...
...allocating CPU memory.
...allocating GPU memory.
...generating input data in CPU mem.
...copying input data to GPU mem.
Data init done.
Executing GPU kernel...
GPU total   time: 15.288576 msecs.
GPU average time: 0.305772 msecs.
Reading back GPU result...
Checking GPU results...
..running CPU scalar product calculation
...comparing the results
Shutting down...
L1 error: 2.857647E-008
Test passed
==84836== NVPROF is profiling process 84836, command: applications/scalarProd -device=1 -iters=50
==84836== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==84836== Profiling application: applications/scalarProd -device=1 -iters=50
==84836== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 80.79%  13.301ms        51  260.81us  243.52us  263.26us  scalarProdGPU(float*, float*, float*, int, int)
 19.19%  3.1589ms         2  1.5794ms  1.5736ms  1.5853ms  [CUDA memcpy HtoD]
  0.02%  3.7440us         1  3.7440us  3.7440us  3.7440us  [CUDA memcpy DtoH]

==84836== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 68.93%  200.46ms         3  66.820ms  524.75us  198.85ms  cudaMalloc
 22.09%  64.248ms         1  64.248ms  64.248ms  64.248ms  cudaDeviceReset
  5.47%  15.902ms        51  311.81us  305.02us  338.28us  cudaThreadSynchronize
  1.13%  3.2915ms         3  1.0972ms  64.812us  1.9501ms  cudaMemcpy
  0.58%  1.6746ms        51  32.835us  27.005us  61.117us  cudaEventSynchronize
  0.38%  1.0981ms       182  6.0330us       0ns  310.42us  cuDeviceGetAttribute
  0.29%  845.40us        51  16.576us  15.066us  56.000us  cudaLaunch
  0.27%  774.62us         3  258.21us  6.8230us  760.41us  cudaDeviceSynchronize
  0.25%  722.32us       102  7.0810us  5.1160us  19.899us  cudaEventRecord
  0.22%  628.23us         1  628.23us  628.23us  628.23us  cudaGetDeviceProperties
  0.16%  460.51us        51  9.0290us  7.9590us  9.6650us  cudaEventElapsedTime
  0.14%  417.87us         3  139.29us  114.84us  156.35us  cudaFree
  0.06%  167.15us         2  83.573us  68.792us  98.355us  cuDeviceGetName
  0.02%  71.067us       255     278ns       0ns  10.802us  cudaSetupArgument
  0.01%  23.879us        51     468ns     284ns  3.6960us  cudaConfigureCall
  0.00%  14.213us         1  14.213us  14.213us  14.213us  cudaSetDevice
  0.00%  12.508us         2  6.2540us  5.6850us  6.8230us  cuDeviceTotalMem
  0.00%  8.5270us         2  4.2630us     852ns  7.6750us  cudaEventCreate
  0.00%  3.4100us         3  1.1360us     284ns  2.5580us  cuDeviceGetCount
  0.00%  2.8430us         6     473ns       0ns  1.1370us  cuDeviceGet
  0.00%     853ns         1     853ns     853ns     853ns  cudaGetDeviceCount
  0.00%     568ns         1     568ns     568ns     568ns  cudaGetLastError
