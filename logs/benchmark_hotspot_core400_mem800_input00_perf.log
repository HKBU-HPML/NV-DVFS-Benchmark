"arg:512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out" 
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
WG size of kernel = 16 X 16
pyramidHeight: 1
gridSize: [512, 512]
border:[1, 1]
blockGrid:[37, 37]
targetBlock:[14, 14]
Start computing the transient temperature
Adjust Iters to 29570 for meeting time requirement 10 secs.
iterated 29570, average time is 0.321837 msec.
Ending simulation
gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
WG size of kernel = 16 X 16
pyramidHeight: 1
gridSize: [512, 512]
border:[1, 1]
blockGrid:[37, 37]
targetBlock:[14, 14]
Start computing the transient temperature
iterated 50, average time is 0.339364 msec.
Ending simulation
==8792== NVPROF is profiling process 8792, command: applications/hotspot 512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out -device=1 -iters=50
==8792== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==8792== Profiling application: applications/hotspot 512 1 ./datasets/hotspot/temp_512 ./datasets/hotspot/power_512 output.out -device=1 -iters=50
==8792== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 93.28%  14.053ms        51  275.56us  273.47us  281.50us  calculate_temp(int, float*, float*, float*, int, int, int, int, float, float, float, float, float)
  4.62%  695.44us         2  347.72us  343.80us  351.64us  [CUDA memcpy HtoD]
  2.10%  316.28us         1  316.28us  316.28us  316.28us  [CUDA memcpy DtoH]

==8792== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 87.83%  189.69ms         3  63.231ms  573.65us  188.21ms  cudaMalloc
  8.25%  17.824ms        51  349.49us  339.13us  709.81us  cudaThreadSynchronize
  1.11%  2.4032ms        51  47.121us  46.335us  57.706us  cudaEventSynchronize
  0.57%  1.2354ms       182  6.7870us       0ns  315.25us  cuDeviceGetAttribute
  0.50%  1.0759ms         3  358.65us  177.38us  696.16us  cudaMemcpy
  0.41%  876.95us        51  17.195us  16.203us  42.356us  cudaLaunch
  0.40%  857.05us       102  8.4020us  6.2530us  12.507us  cudaEventRecord
  0.29%  633.34us         1  633.34us  633.34us  633.34us  cudaGetDeviceProperties
  0.24%  529.02us         3  176.34us  162.03us  194.44us  cudaFree
  0.23%  491.21us        51  9.6310us  9.3800us  10.233us  cudaEventElapsedTime
  0.08%  167.43us         2  83.715us  69.076us  98.355us  cuDeviceGetName
  0.06%  122.23us       663     184ns       0ns     853ns  cudaSetupArgument
  0.01%  23.312us        51     457ns     284ns  2.2740us  cudaConfigureCall
  0.01%  14.782us         2  7.3910us  7.3910us  7.3910us  cudaDeviceSynchronize
  0.01%  13.929us         1  13.929us  13.929us  13.929us  cudaSetDevice
  0.01%  12.224us         2  6.1120us  5.6850us  6.5390us  cuDeviceTotalMem
  0.00%  5.9700us         2  2.9850us     853ns  5.1170us  cudaEventCreate
  0.00%  3.4110us         3  1.1370us     285ns  2.5580us  cuDeviceGetCount
  0.00%  3.1260us         6     521ns     284ns  1.1370us  cuDeviceGet
  0.00%  2.5590us         1  2.5590us  2.5590us  2.5590us  cudaGetDeviceCount
