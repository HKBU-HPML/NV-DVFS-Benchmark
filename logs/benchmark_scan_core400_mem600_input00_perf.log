"arg:" 
applications\scan Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Allocating and initializing host arrays...
Allocating and initializing CUDA arrays...
Initializing CUDA-C scan...

***Running GPU scan for large arrays (100 identical iterations)...

Running scan for 262144 elements (26 arrays)...
Adjust Iters to 2834 for meeting time requirement 10 secs.
Validating the results...
...reading back GPU results
...scanExclusiveHost()
 ...comparing the results
 ...Results Match


scan, Total Time = 10.02342 s
scan, Throughput = 74.1180 MElements/s, Time = 0.00354 s, Size = 262144 Elements, NumDevsUsed = 1, Workgroup = 256

Shutting down...
applications/scan Starting...

gpuDeviceInit() CUDA Device [1]: "GeForce GTX 980
Allocating and initializing host arrays...
Allocating and initializing CUDA arrays...
Initializing CUDA-C scan...

***Running GPU scan for large arrays (50 identical iterations)...

Running scan for 262144 elements (26 arrays)...
Validating the results...
...reading back GPU results
...scanExclusiveHost()
 ...comparing the results
 ...Results Match


scan, Total Time = 0.17708 s
scan, Throughput = 74.0176 MElements/s, Time = 0.00354 s, Size = 262144 Elements, NumDevsUsed = 1, Workgroup = 256

Shutting down...
==70136== NVPROF is profiling process 70136, command: applications/scan -device=1 -iters=50
==70136== Warning: Unified Memory Profiling is not supported on the current configuration because a pair of devices without peer-to-peer support is detected on this multi-GPU setup. When peer mappings are not available, system falls back to using zero-copy memory. It can cause kernels, which access unified memory, to run slower. More details can be found at: http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#um-managed-memory
==70136== Profiling application: applications/scan -device=1 -iters=50
==70136== Profiling result:
Time(%)      Time     Calls       Avg       Min       Max  Name
 43.50%  87.253ms        51  1.7108ms  1.7043ms  1.7202ms  scanExclusiveShared(uint4*, uint4*, unsigned int)
 43.40%  87.034ms        51  1.7065ms  1.7012ms  1.7119ms  uniformUpdate(uint4*, unsigned int*)
  6.29%  12.613ms         1  12.613ms  12.613ms  12.613ms  [CUDA memcpy DtoH]
  6.06%  12.148ms         1  12.148ms  12.148ms  12.148ms  [CUDA memcpy HtoD]
  0.75%  1.5136ms        51  29.678us  27.103us  33.055us  scanExclusiveShared2(unsigned int*, unsigned int*, unsigned int*, unsigned int, unsigned int)

==70136== API calls:
Time(%)      Time     Calls       Avg       Min       Max  Name
 41.91%  208.91ms         3  69.637ms  1.4165ms  201.98ms  cudaMalloc
 36.28%  180.84ms        51  3.5458ms  3.5215ms  3.5655ms  cudaThreadSynchronize
 14.90%  74.282ms         1  74.282ms  74.282ms  74.282ms  cudaDeviceReset
  4.84%  24.128ms         2  12.064ms  11.157ms  12.970ms  cudaMemcpy
  0.67%  3.3310ms        51  65.313us  46.903us  87.269us  cudaEventSynchronize
  0.47%  2.3526ms       153  15.376us  13.360us  52.020us  cudaLaunch
  0.23%  1.1666ms         3  388.87us  187.61us  493.48us  cudaFree
  0.23%  1.1234ms       182  6.1720us       0ns  320.65us  cuDeviceGetAttribute
  0.17%  828.92us       102  8.1260us  5.6860us  11.655us  cudaEventRecord
  0.13%  639.31us         1  639.31us  639.31us  639.31us  cudaGetDeviceProperties
  0.10%  497.75us        51  9.7590us  9.3800us  10.518us  cudaEventElapsedTime
  0.03%  147.53us         2  73.766us  68.223us  79.310us  cuDeviceGetName
  0.02%  112.28us       510     220ns       0ns  1.4210us  cudaSetupArgument
  0.01%  48.320us       153     315ns       0ns  4.2640us  cudaConfigureCall
  0.01%  39.512us       153     258ns       0ns     285ns  cudaGetLastError
  0.01%  25.015us         3  8.3380us  7.3910us  10.233us  cudaDeviceSynchronize
  0.00%  11.371us         2  5.6850us  5.4010us  5.9700us  cuDeviceTotalMem
  0.00%  11.086us         1  11.086us  11.086us  11.086us  cudaSetDevice
  0.00%  10.233us         2  5.1160us  1.1370us  9.0960us  cudaEventCreate
  0.00%  2.8430us         3     947ns     284ns  2.2740us  cuDeviceGetCount
  0.00%  2.2740us         6     379ns     284ns     568ns  cuDeviceGet
  0.00%     853ns         1     853ns     853ns     853ns  cudaGetDeviceCount
